version: '3.1'

services:
  service-api:
    container_name: $INFRA_API_APP
    image: ${INFRA_API_IMAGE}:${INFRA_API_IMAGE_TAG:-latest}
    build: strapi-backend
    restart: unless-stopped
    env_file:
      - $INFRA_API_PATH/.env
      - $ENV_SELF_PATH
    environment:
      PORT: $INFRA_API_PORT
      HOST: 0.0.0.0
      APP_URL: ${INFRA_API_URL}
      APP_ADMIN_URL: ${INFRA_API_ADMIN_URL}
      NODE_ENV: development
      WHOAMI_PORT_NUMBER: ${INFRA_API_PORT}
      DATABASE_HOST: ${INFRA_DB_APP}
      DATABASE_PORT: ${INFRA_DB_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - ${INFRA_API_PORT}
    depends_on:
      - service-db

  service-db:
    container_name: $INFRA_DB_APP
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - ${INFRA_DB_PORT}
    command: "-p ${INFRA_DB_PORT}"
    volumes:
      - $INFRA_DB_STORE:/var/lib/postgresql/data
  
  service-adminer:
    container_name: $INFRA_DB_ADMIN
    image: adminer:latest
    ports:
      - ${INFRA_DB_ADMIN_PORT}:8080

  # service-web:
  #   container_name: $INFRA_WEB_APP
  #   image: ${INFRA_WEB_IMAGE}:${INFRA_WEB_IMAGE_TAG:-latest}
  #   build: /lawa-react-next
  #   restart: unless-stopped
  #   environment:
  #     PORT: ${INFRA_WEB_PORT}
  #     HOST: 0.0.0.0
  #     NODE_ENV: development
  #     WHOAMI_PORT_NUMBER: ${INFRA_WEB_PORT}
  #     APP_API_URL: ${INFRA_API_URL}
  #   ports:
  #     - ${INFRA_WEB_PORT}
  #   depends_on:
  #     - service-api

      
